#!/bin/sh

local_session_name="local"

RESULT_PATH=$(zoxide query $1)

if [ -z "$RESULT_PATH" ]; then
  echo "No result found for: "$RESULT_PATH
  exit 1
fi

RESULT_DIRECTORY_NAME=$(basename $RESULT_PATH)
RESULT_DIRECTORY_NAME=$(echo "$RESULT_DIRECTORY_NAME" | sed 's/[.:]/_/g')

pre_switch_actions() {
  init_command='ls'
  tmux send-keys -t "$local_session_name:$RESULT_DIRECTORY_NAME" "$init_command" C-m &
}

if [[ -z $(pgrep tmux) ]] || ! tmux has-session -t "$local_session_name"; then
  echo "creating new session named: $local_session_name"
  tmux new-session -d -s "$local_session_name" -c "$HOME" -n "home"
fi

# if we cannot find the desired wintow name, create it
tmux list-windows -t "$local_session_name" -F \#{window_name} | grep -qw $RESULT_DIRECTORY_NAME ||
  $(tmux new-window -S -n "$RESULT_DIRECTORY_NAME" -t "$local_session_name" -c "$RESULT_PATH" && pre_switch_actions)
tmux select-window -t "$RESULT_DIRECTORY_NAME"

# if we are not in tmux, or the desired session is not the current session, attach
if [[ -z "$TMUX" ]] || test $(tmux display-message -p '#S') != $local_session_name; then
  tmux attach-session -d -t "$local_session_name"
fi
